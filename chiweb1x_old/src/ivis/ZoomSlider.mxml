<?xml version="1.0" encoding="utf-8"?>

<!--
* Authors: Ebrahim Rajabzadeh
*
* Copyright: i-Vis Research Group, Bilkent University, 2009 - present 
-->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" mouseOver="onRollOver(event)" rollOut="onRollOut(event)" clipContent="false">
	<mx:ComboBox id="input" selectedIndex="0" dataProvider="{_zoomData}" cornerRadius="8" close="onComboChange(event)">
	</mx:ComboBox>
	<mx:HSlider id="slider" x="{(input.x + input.width - slider.width)/2}" y="{input.height + 1}" visible="false" includeInLayout="true" liveDragging="true"
		minimum="{Graph.ZOOM_MIN}" maximum="{Graph.ZOOM_MAX}" showTrackHighlight="true" value="{graph.zoom}" tickOffset="8" 
		tickValues="[ 1 ]"
		width="{input.width}"
		/>
	
	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			import mx.collections.ArrayCollection;
			
			private var _graph: Graph = null;
			
			[Bindable]
			private var _zoomData: ArrayCollection = new ArrayCollection(
				[ "Actual Size", "Fit in Canvas" ]);
				
			private function onRollOver(e: Event): void
			{
				if(!slider.visible) {
					slider.visible = true
				}
			}

			[Bindable]
			public function get graph(): Graph
			{
				return _graph
			}
			
			public function set graph(value: Graph): void
			{
				this._graph = value
				
				if(_graph)
				{
					_graph.addEventListener("zoomChanged", function(e: Event): void {
//						_zoomData.setItemAt("%" + uint(slider.value * 100), 2)
//						_zoomData.itemUpdated(null, 2)
						input.prompt = "%" + uint(slider.value * 100)
						input.selectedIndex = -1
					})
				}
			}
			
			private function onRollOut(e: MouseEvent): void
			{
				if(!e.buttonDown)
					slider.visible = false
			}
			
			private function onComboChange(e: Event): void
			{
				if(!this.graph)
					return
				
				if(input.value == "Actual Size")
					graph.resetView()
				else if(input.value == "Fit in Canvas")
					graph.zoomToFit()
			}
			
		]]>
	</mx:Script>
</mx:Canvas>
